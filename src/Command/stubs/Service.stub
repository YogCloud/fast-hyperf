<?php

declare(strict_types=1);

namespace #SERVICE_NAMESPACE#;

use #MODEL_NAMESPACE#\#MODEL#;
use #INTERFACE_NAMESPACE#\#MODEL#ServiceInterface;
#CACHE_NAMESPACE#
#DELCACHE_NAMESPACE#
use YogCloud\Framework\Service\AbstractService;

class #MODEL#Service extends AbstractService implements #MODEL#ServiceInterface
{
    /**
     * @var #MODEL#
     */
    protected $model;

    /**
     * {@inheritdoc}
     * #GET_CACHE#
     */
    public function getOneById(int $id, array $columns = ['*']): array
    {
        return $this->model->getOneById($id, $columns);
    }

    /**
     * {@inheritdoc}
     */
    public function findByWhere(array $where, array $columns = ['*'], array $options = []): array
    {
        return $this->model->findByWhere($where, $columns, $options);
    }

    /**
     * {@inheritdoc}
     */
    public function getAllById(array $ids, array $columns = ['*']): array
    {
        return $this->model->getAllById($ids, $columns);
    }

    /**
     * {@inheritdoc}
     */
    public function getManyByWhere(array $where, array $columns = ['*'], array $options = []): array
    {
        return $this->model->getManyByWhere($where, $columns, $options);
    }

    /**
     * {@inheritdoc}
     */
    public function getPageList(array $where, array $columns = ['*'], array $options = []): array
    {
        return $this->model->getPageList($where, $columns, $options);
    }

    /**
     * {@inheritdoc}
     */
    public function createOne(array $data): int
    {
        return $this->model->createOne($data);
    }

    /**
     * {@inheritdoc}
     */
    public function createAll(array $data): bool
    {
        return $this->model->createAll($data);
    }

    /**
     * {@inheritdoc}
     * #DEL_CACHE#
     */
    public function updateOneById(int $id, array $data): int
    {
        return $this->model->updateOneById($id, $data);
    }

    /**
     * {@inheritdoc}
     */
    public function updateByWhere(array $where, array $data): int
    {
        return $this->model->updateByWhere($where, $data);
    }

    /**
     * {@inheritdoc}
     * #DEL_CACHE#
     */
    public function deleteOne(int $id): int
    {
        return $this->model->deleteOne($id);
    }

    /**
     * {@inheritdoc}
     */
    public function deleteAll(array $ids): int
    {
        return $this->model->deleteAll($ids);
    }

    /**
     * {@inheritdoc}
     */
    public function rawWhere($raw, array $where = []): array
    {
        return $this->model->rawWhere($raw, $where);
    }

}